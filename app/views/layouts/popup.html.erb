<!DOCTYPE html>
<html lang="ja">
  <head>
    <meta charset="utf-8">
    <meta http-equiv="X-UA-Compatible" content="IE=Edge,chrome=1">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title><%= content_for?(:title) ? yield(:title) : "中央ビル管理Webシステム" %></title>
    <%= csrf_meta_tags %>

    <!-- Le HTML5 shim, for IE6-8 support of HTML elements -->
    <!--[if lt IE 9]>
      <script src="//cdnjs.cloudflare.com/ajax/libs/html5shiv/3.6.1/html5shiv.js" type="text/javascript"></script>
    <![endif]-->

    <%= stylesheet_link_tag "application", :media => "all" %>
	
	<style type="text/css" media="print">
	<!--
		.print-none{
			display:none;
		}
		
	-->
	</style>


    <!-- For third-generation iPad with high-resolution Retina display: -->
    <!-- Size should be 144 x 144 pixels -->
    <%= favicon_link_tag 'apple-touch-icon-144x144-precomposed.png', :rel => 'apple-touch-icon-precomposed', :type => 'image/png', :sizes => '144x144' %>

    <!-- For iPhone with high-resolution Retina display: -->
    <!-- Size should be 114 x 114 pixels -->
    <%= favicon_link_tag 'apple-touch-icon-114x114-precomposed.png', :rel => 'apple-touch-icon-precomposed', :type => 'image/png', :sizes => '114x114' %>

    <!-- For first- and second-generation iPad: -->
    <!-- Size should be 72 x 72 pixels -->
    <%= favicon_link_tag 'apple-touch-icon-72x72-precomposed.png', :rel => 'apple-touch-icon-precomposed', :type => 'image/png', :sizes => '72x72' %>

    <!-- For non-Retina iPhone, iPod Touch, and Android 2.1+ devices: -->
    <!-- Size should be 57 x 57 pixels -->
    <%= favicon_link_tag 'apple-touch-icon-precomposed.png', :rel => 'apple-touch-icon-precomposed', :type => 'image/png' %>

    <!-- For all other devices -->
    <!-- Size should be 32 x 32 pixels -->
    <%#= favicon_link_tag 'favicon.ico', :rel => 'shortcut icon' %>

    <%= javascript_include_tag "application" %>
    <%= include_gon %>

    <style type="text/css">
      /* bootstrapのCSSを上書きして、左の空白を取りすぎてしまう現象を解消 2013/08/31 takashi */
      .form-horizontal .control-label {
        float: left;
        width: 80px; /* ここを変更 */
        padding-top: 5px;
        text-align: right;
      }
      .form-horizontal .controls {
        margin-left: 100px; /* ここを変更 */
      }
	  
  	a{
  	  text-decoration:underline;	
  	}
	  
    </style>
	
	<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&v=3&language=ja&libraries=visualization&client=gme-chuobuildingkanri"></script>
	<script type="text/javascript">
		
	var mapCanvas; // グローバル
    var markers = []; // マーカー保存配列
	
	function createMarker_pop(opts){
	  var marker = new google.maps.Marker(opts);
	  var infoWnd = new google.maps.InfoWindow(); //唯一のinfoWnd
	  infoWnd.setContent(opts.html);
	  infoWnd.open(opts.map, marker);

	  google.maps.event.addListener(marker, "click", function(){
	    // write_build(opts.info_msg);

	    infoWnd.close();
	    infoWnd.setContent(opts.html);
	    infoWnd.open(opts.map, marker);
	    opts.map.panTo(opts.position);

	    marker.set("visible", true);

	  });

	  return marker;
	}
	
	
	// 初期化処理
    function initialize(){
		
	    // 地図を作成
	    var mapDiv = document.getElementById("pop_map_canvas");
	    mapCanvas = new google.maps.Map(mapDiv, {
			mapTypeControlOptions: {
				mapTypeIds: [google.maps.MapTypeId.ROADMAP,'noText', 'map_style']
			}
			,scaleControl: true
			,zoom: 19
			,minZoom: 2
	    });
		
		// スタイル定義
		var lopanType = new google.maps.StyledMapType(
			[
				{
					featureType: 'all'
				   ,elementType: 'labels'
				   ,stylers: [{ visibility: 'off' }]
				}
			]
			,{ name: '文字を消す' }
		);
		
		mapCanvas.mapTypes.set('noText', lopanType);
		
		<% if @building %>
			init_building(); // 物件の地図情報を作成
		<% elsif @owner %>
			init_owner(); // 貸主の地図情報を作成
		<% end %>
	}
	
	// 物件の地図情報作成
	function init_building(){
		
	    // 初期表示位置を調整
	    var bounds = new google.maps.LatLngBounds();
		var building = gon.building
		
		var pos;
        pos = new google.maps.LatLng(building.latitude, building.longitude);
        // bounds.extend(pos);

        var biru_marker = createMarker_pop({
          position : pos
          ,map : mapCanvas
		  ,html : building.name 
		  ,icon : '/biruweb/assets/building.gif'
		  ,draggable: false
        });
		
	    // mapCanvas.fitBounds(bounds);
		mapCanvas.setCenter(pos);
		
		// マップ上の位置でゴミ置き場マーカーを生成  
	    google.maps.event.addListener(mapCanvas, 'click', function(event) {  
	        addGarbageArea(event.latLng);
	    });
		
	}
	
	// 貸主の地図情報作成
	function init_owner(){
		var bounds = new google.maps.LatLngBounds();
		var owner = gon.owner
		var buildings = gon.buildings
		
		var pos;
        pos = new google.maps.LatLng(owner.latitude, owner.longitude);
        bounds.extend(pos);
		
        var owner_marker = createMarker_pop({
          position : pos
          ,map : mapCanvas
		  ,html : owner.name 
		  ,icon : '/biruweb/assets/owner.png'
		  ,draggable: false
        });
		
			
		buildings.forEach(function(building){
			
	        pos = new google.maps.LatLng(building.latitude, building.longitude);
	        bounds.extend(pos);
			
	        var building_marker = createMarker_pop({
	          position : pos
	          ,map : mapCanvas
			  ,html : building.name 
			  ,icon : '/biruweb/assets/blue-pushpin.png'
			  ,draggable: false
	        });
		});
		
	    mapCanvas.fitBounds(bounds);
		// mapCanvas.setCenter(pos);
		
	}
	
	// マーカーの生成関数  
	function addGarbageArea(location) {  
	    // マーカーを生成  
	    marker = new google.maps.Marker({  
	        position: location
	        ,map: mapCanvas  
			,icon: '/biruweb/assets/s_garbage_area.png'
			,draggable: true
	    }); 
		
	    // 情報ウインドウの生成とクリックイベント関数の登録処理  
	    setMarkerListener(marker, location, 'ゴミ置き場');  
		
	    // 生成されたマーカーを保存  
	    markers.push(marker);  
	}
	
	// 情報ウインドウの生成とクリックイベント関数の登録処理  
	function setMarkerListener(marker, location, msg) {  
	    // 表示文字列の生成(緯度・経度)  
	    // var contentString = "lat:" + location.lat() + "<br>" + "lng:" + location.lng();  
		
	    // 情報ウィンドウの生成
	    var infoWindow_local = new google.maps.InfoWindow({  
		        content: msg
	    });  
		
        infoWindow_local.open(mapCanvas, marker);  
	    // マーカーのクリックイベントの関数登録  
	    google.maps.event.addListener(marker, 'click', function(event) {  
	        // 情報ウィンドウの表示  
	        infoWindow_local.open(mapCanvas, marker);  
	    });  
	} 	
		
    google.maps.event.addDomListener(window, "load", initialize);
	
	</script>
	
	
	<%# （呼び出し元の）ウィンドウ名が指定されていたらそのウィンドウをクローズする %>
	<% if @close_window_name != "" %>
		<script type="text/javascript">
			$(function(){
				window.open('about:blank','<%= @close_window_name %>').close();
			});
		</script>
	<% end %>

  </head>
  <body>

  <%= yield %>


    <!-- Javascripts
    ================================================== -->
    <!-- Placed at the end of the document so the pages load faster -->
    <%#= javascript_include_tag "application" %> <!-- ここにあると「$」定義されていないとエラーになるのでヘッダに移動 -->

  </body>
</html>
