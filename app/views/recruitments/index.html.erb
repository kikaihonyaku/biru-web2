<!--
<h1>募集に使用する画面</h1>
<p>来店客に物件を紹介する時に使う</p>

<ul>
  <li>google mapで募集中の物件をダブルクリックするとそこのルートとgoogleストリートビューで道が表示される</li>
  <li>室内写真がストリートビューの形式で確認できる</li>
  <li>動画を再生できる</li>
</ul>
-->
 
<!--
<h1>募集に使用する画面</h1>
<p>来店客に物件を紹介する時に使う</p>

<ul>
  <li>google mapで募集中の物件をダブルクリックするとそこのルートとgoogleストリートビューで道が表示される</li>
  <li>室内写真がストリートビューの形式で確認できる</li>
  <li>動画を再生できる</li>
</ul>
-->

<% content_for :header do %>
<script type="text/javascript" src="http://maps.googleapis.com/maps/api/js?sensor=false&v=3&language=ja&libraries=visualization,places&client=gme-chuobuildingkanri"></script>
<script type="text/javascript">

/* プレイスタイプ */
var places_types={
    "accounting":"会計事務所",
    "airport":"空港",
    "amusement_park":"遊園地",
    "aquarium":"水族館",
    "art_gallery":"アート ギャラリー",
    "atm":"ATM",
    "bakery":"ベーカリー、パン屋",
    "bank":"銀行",
    "bar":"居酒屋",
    "beauty_salon":"ビューティー サロン",
    "bicycle_store":"自転車店",
    "book_store":"書店",
    "bowling_alley":"ボウリング場",
    "bus_station":"バスターミナル",
    "cafe":"カフェ",
    "campground":"キャンプ場",
    "car_dealer":"カー ディーラー",
    "car_rental":"レンタカー",
    "car_repair":"車の修理",
    "car_wash":"洗車場",
    "casino":"カジノ",
    "cemetery":"墓地",
    "church":"教会",
    "city_hall":"市役所",
    "clothing_store":"衣料品店",
    "convenience_store":"コンビニエンス ストア",
    "courthouse":"裁判所",
    "dentist":"歯科医",
    "department_store":"百貨店",
    "doctor":"医者",
    "electrician":"電気工",
    "electronics_store":"電器店",
    "embassy":"大使館",
    "establishment":"施設",
    "finance":"金融業",
    "fire_station":"消防署",
    "florist":"花屋",
    "food":"食料品店",
    "funeral_home":"葬儀場",
    "furniture_store":"家具店",
    "gas_station":"ガソリンスタンド",
    "general_contractor":"建設会社",
    "geocode":"ジオコード",
    "grocery_or_supermarket":"スーパー",
    "gym":"スポーツクラブ",
    "hair_care":"ヘアケア",
    "hardware_store":"金物店",
    "health":"健康",
    "hindu_temple":"ヒンドゥー寺院",
    "home_goods_store":"インテリア ショップ",
    "hospital":"病院",
    "insurance_agency":"保険代理店",
    "jewelry_store":"宝飾店",
    "laundry":"クリーニング店",
    "lawyer":"弁護士",
    "library":"図書館",
    "liquor_store":"酒店",
    "local_government_office":"役場",
    "locksmith":"錠屋",
    "lodging":"宿泊施設",
    "meal_delivery":"出前",
    "meal_takeaway":"テイクアウト",
    "mosque":"モスク",
    "movie_rental":"DVD レンタル",
    "movie_theater":"映画館",
    "moving_company":"引越会社",
    "museum":"美術館/博物館",
    "night_club":"ナイト クラブ",
    "painter":"塗装業",
    "park":"公園",
    "parking":"駐車場",
    "pet_store":"ペット ショップ",
    "pharmacy":"薬局",
    "physiotherapist":"理学療法士",
    "place_of_worship":"礼拝所",
    "plumber":"配管工",
    "police":"警察",
    "post_office":"郵便局",
    "real_estate_agency":"不動産業",
    "restaurant":"レストラン",
    "roofing_contractor":"防水工事業",
    "rv_park":"オート キャンプ場",
    "school":"学校",
    "shoe_store":"靴屋",
    "shopping_mall":"ショッピング モール",
    "spa":"温泉、スパ",
    "stadium":"スタジアム",
    "storage":"倉庫",
    "store":"小売店",
    "subway_station":"地下鉄駅",
    "synagogue":"シナゴーグ",
    "taxi_stand":"タクシー乗り場",
    "train_station":"駅",
    "travel_agency":"旅行代理店",
    "university":"大学",
    "veterinary_care":"獣医",
    "zoo":"動物園",
    "administrative_area_level_1":"行政区画レベル 1",
    "administrative_area_level_2":"行政区画レベル 2",
    "administrative_area_level_3":"行政区画レベル 3",
    "colloquial_area":"非公式地域",
    "country":"国",
    "floor":"階",
    "intersection":"交差点",
    "locality":"地区",
    "natural_feature":"地勢",
    "neighborhood":"周辺地域",
    "political":"政治",
    "point_of_interest":"スポット",
    "post_box":"ポスト",
    "postal_code":"郵便番号",
    "postal_code_prefix":"郵便番号のプレフィックス",
    "postal_town":"郵便番号に対応する都市",
    "premise":"建物名",
    "room":"部屋",
    "route":"ルート",
    "street_address":"住所",
    "street_number":"番地",
    "sublocality":"下位地区",
    "sublocality_level_4":"下位地区レベル 4",
    "sublocality_level_5":"下位地区レベル 5",
    "sublocality_level_3":"下位地区レベル 3",
    "sublocality_level_2":"下位地区レベル 2",
    "sublocality_level_1":"下位地区レベル 1",
    "subpremise":"区画",
    "transit_station":"駅、停留所"
};


// グローバル変数定義
var point,openFLG=[],overlays=[],iterator=0,current;
var openFLG=[],iterator=0;
var picmaxWidth=200; //スポット画像の最大幅
var picmaxHeight=200; //スポット画像の最大高さ
var before_circle = null;
var g_places; // placesを格納


// 指定した物件の周辺検索をします。
function search_around(biru_id){
  document.aaaa.around.value = biru_id;
  document.aaaa.submit();
}

// 表示する場所を定義します。
function initPlaces(){

  g_places = {};
  g_places["bakery"] = "place_market.png" // "ベーカリー、パン屋",
  g_places["beauty_salon"] = "place_hear_salon.png" // "ビューティー サロン",
  g_places["cafe"] = "place_restrant.png" // "カフェ",
  g_places["convenience_store"] = "place_convenience.png" // "コンビニエンス ストア",
  g_places["dentist"] = "place_hospital.png" // "歯科医",
  g_places["doctor"] = "place_hospital.png" // "医者",
  g_places["food"] = "place_market.png" // "食料品店",
  g_places["grocery_or_supermarket"] = "place_market.png" // "スーパー",
  g_places["hospital"] = "place_hospital.png" // "病院",
  g_places["restaurant"] = "place_restrant.png" // "レストラン",
  g_places["school"] = "place_school.png" // "学校",
  g_places["university"] = "place_school.png" // "大学"
  g_places["book_store"] = "place_etc.png" // "書店",
  g_places["atm"] = "place_etc.png" // "ATM",
  g_places["bank"] = "place_etc.png" // "銀行",
  g_places["clothing_store"] = "place_etc.png" // "衣料品店",
  g_places["city_hall"] = "place_etc.png" // "市役所",
  g_places["department_store"] = "place_etc.png" // "百貨店",
  g_places["electronics_store"] = "place_etc.png" // "電器店",
  g_places["library"] = "place_etc.png" // "図書館",
  g_places["local_government_office"] = "place_etc.png" // "役場",
  g_places["movie_rental"] = "place_etc.png" // "DVD レンタル",
  g_places["movie_theater"] = "place_etc.png" // "映画館",
  g_places["post_office"] = "place_etc.png" // "郵便局",
  g_places["park"] = "place_etc.png" // "公園",
  g_places["police"] = "place_etc.png" // "警察",
  g_places["shopping_mall"] = "place_etc.png" // "ショッピング モール",
  g_places["store"] = "place_etc.png" // "小売店",

}

function fGetPlaceInfo(chk_flg, lat, lng){

    if(chk_flg == false){
      exit;
    }

    // チェックされた場所を選択
//    var places=[];
//    $('[name="place"]:checked').each(function(){
//      places.push($(this).val());
//    });

    initPlaces();

    resetOverlay(1);

    // チェックされた範囲を選択
//    var p_size;
//    p_size = $('#place_size').val();
    p_size = 1000;

    var place_pos;
    place_pos = new google.maps.LatLng(lat, lng);

    //alert(places);

    // 検索範囲の円を描く
    var myCircle = new google.maps.Circle({
      map : mapCanvas
      ,center : place_pos
      ,strokeColor: '#0000FF' /* ストロークの色 */
      ,strokeOpacity: 0.8 /* ストロークの透明度 */
      ,strokeWeight: 1 /* ストロークの幅 */
      ,fillColor: '#0000FF' /* フィルの色 */
      ,fillOpacity: 0.01 /* フィルの透明度 */
      ,fillColor: "#0000FF"
    });

    myCircle.setRadius(parseInt(p_size)); // メートル単位で指定
    myCircle.set("visible",true);

    if(before_circle != null){
      before_circle.set("visible",false);
    }

    before_circle = myCircle;

    // 周辺施設を検索する。
    var request={
        location: place_pos,
        radius:p_size, /* 指定した座標から半径1000m(1km)以内 */
         types: g_places
    };
    service.search(request, callback);
}

function dbg(str){
    try{
        if(window.console && console.log){
            console.log(str);
        }
    }catch(err){
        //alert("error:"+err);
    }
}

function callback(results, status) {
  if (status == google.maps.places.PlacesServiceStatus.OK) {

    var bounds_place = new google.maps.LatLngBounds();

    for (var i = 0; i < results.length; i++) {
      createMarker_place(results[i], bounds_place);
    }

    mapCanvas.fitBounds(bounds_place);

  }
}

/* オーバーレイ全削除 */
function resetOverlay(deleteFLG){
    if(overlays.length>0){
        for(i in overlays){
            overlays[i][1].close();
            if(deleteFLG==1){
                openFLG[i]=0;
                overlays[i][0].setMap(null);
            }
        }
        if(deleteFLG==1) overlays.length=0;
        if(deleteFLG==1) iterator=0;
    }
}

function getPlaceIcon(place_arr){

  var key;
  for(key in g_places ){

    if($.inArray(key, place_arr) >= 0){
      return '/biruweb/assets/' + g_places[key];
    }
  }

  // なにも見つからなかった時
  return '/biruweb/assets/place_etc.png';

}

function createMarker_place(place, bounds_place) {
  var placeLoc=place.geometry.location;
  var place_pos = new google.maps.LatLng(placeLoc.lat(), placeLoc.lng());
  bounds_place.extend(place_pos);

//  var custum_icon = new google.maps.MarkerImage(
//    place.icon,
//    null,
//    null,
//    null,
//    new google.maps.Size(20, 20));


    var custum_icon = getPlaceIcon(place.types);

    var marker=new google.maps.Marker({
        map: mapCanvas,
        position: place_pos,
        icon :custum_icon,
        shadow : '/biruweb/assets/place_shadow.png'

    });
    /* 情報ウィンドウ */
    var infowindow=new google.maps.InfoWindow({
        maxWidth:320
    });
    /* ID、フラグセット */
    marker.set("id",iterator);
    infowindow.set("id",iterator);
    overlays.push([marker,infowindow]);
    /* 情報ウィンドウの×ボタンと押した時 */
    google.maps.event.addListener(infowindow,"closeclick",function(){
        openFLG[infowindow.get("id")]=0;
    });
    /* マーカークリックで情報ウィンドウを開閉 */
    google.maps.event.addListener(marker, "mouseover", function(){

        var id=this.get("id");
        if(current>=0 && current!=id){
            openFLG[current]=0;
        }

        resetOverlay(0);
        
        current=id;
        var infowindow=overlays[id][1];
        infowindow.close();
        openFLG[id]=0;

        var s ="";
        /* アイコン+場所名 */
        s+="<div class='ttl cf'>";
        s+=(place.icon)?"<img width='32' height='32' src='"+place.icon+"' style='float:left;margin-right:5px;' />":"";
        s+=(place.name)?"<b>"+place.name+"</b>":"不明";
        s+="</div>";
        s+="<div class='detail'>";
        /* 住所 */
        if(place.vicinity){
            s+="<p>"+place.vicinity+"</p>";
        }
        /* 場所タイプ */
        if(place.types){
            s+="<p>";
            $.each(place.types,function(x,type){
                s+=(places_types[type])?places_types[type]+"　":"";
            });
            s+="</p>";
        }
        /* 営業中か */
        if(place.opening_hours){
            s+="<p>只今営業中！</p>";
        }
        /* 評価 */
        if(place.rating){
            s+="<p>評価："+place.rating+"</p>";
        }
        /* 写真 */
        if(place.photos && place.photos.length>=1){
            s+="<p class='picframe'><img src='"+place.photos[0].getUrl({"maxWidth":picmaxWidth,"maxHeight":picmaxHeight})+"' class='shadow size' /></p>";
        }

        infowindow.setContent("<div class='infowin'>"+s+"</div>");
        if(openFLG[id]!=1){
            infowindow.open(mapCanvas, this);
            openFLG[id]=1;
        }else{
            infowindow.close();
            openFLG[id]=0;
        }
    });
}


function initialize(){

    // 初期表示は非表示
    init_display();

    // 地図・ストリートビューを作成します。
    init_map();


    // 初期表示位置を調整
    bounds = new google.maps.LatLngBounds();

    /* 営業所の情報を表示する */
    shop_arr = {}; // varを消してグローバル化
	gon.shops.forEach(function(shop){

      pos = new google.maps.LatLng(shop.latitude, shop.longitude);
      bounds.extend(pos);

      shop_arr[shop.id] = createMarker({
        position : pos
        ,map : mapCanvas
        ,animation: google.maps.Animation.DROP
        ,icon : shop.icon
        ,info_msg : shop.name
        ,html : shop.name
      });
	    
	});

    /* 検索に一致した物件を表示する */
    build_arr = {}; // グローバル
    kyori_text = ""
    var pos;
		
	gon.buildings.forEach(function(building){
        pos = new google.maps.LatLng(building.latitude, building.longitude);
        bounds.extend(pos);

        // infoWndに表示するHTMLを作成する。
        var inner_text;

       //  var rooms = gon.room_of_building[buildings[i].id];
       //
       //  inner_text = ""
       // for(var j in rooms){
       //    inner_text = inner_text + '<li>' + rooms[j].name + '</li>'
       //  }
       //
       //  var vhtml = '<div><b>' + buildings[i].name + '（<a href="javascript:win_building(' + buildings[i].id + ');">詳細</a>）</b><br>' +
       //    '<div>住所：' + buildings[i].address +'</div>' +
       //    '<div><a href="javascript:search_around(' + buildings[i].id + ');">この物件の周辺情報を検索：</a></div>' +
       //    '<ul style="padding-top:10px;">' + inner_text  + '</ul>' +
       //    '<hr/>' +
       //    '<div style="padding-top:0px;margin-top:0px;padding-left:10px;float:left;">' +
       //    '  <label><input type="checkbox" onclick="this.blur();this.focus();" onchange="fGetPlaceInfo( this.checked, ' + buildings[i].latitude + ',' + buildings[i].longitude  + ');" />&nbsp;周辺施設</label>' +
       //    '</div>' +
       //    '<div style="padding-left:80px;">' +
       //    '  <a href="javascript:void(0)" onClick="view_disp( true, ' + buildings[i].latitude + ',' + buildings[i].longitude  + '); return false;"> ストリートビュー</a>' +
       //    '</div>' +
       //    '</div>';
	   
	   inner_text = "";
	   var rooms = gon.rooms[building.id]
	   rooms.forEach(function(room){
           inner_text = inner_text + '<br/>'  + room.room_code + ' ' + room.room_no
	   });

        build_arr[building.id] = createMarker({
          position : pos
          ,map : mapCanvas
          ,icon : '/biruweb/assets/msmarker_red.png'
          ,shadow : '/biruweb/assets/msmarker_shadow.png'
          ,info_msg : building.name
         // ,html : vhtml
          ,html : building.building_cd + ' ' + building.real_building_name + ' </br>' + inner_text
        });

        // // 周辺の検索
        // if(gon.around_flg == true){
        //
        //   var request = {
        //     location: pos,
        //     radius: '500',
        //     types: ['store']
        //   };
        //
        //   service = new google.maps.places.PlacesService(mapCanvas);
        //   service.search(request, callback);
        //
        // }

	});

    // google places用のサービスを指定
    service=new google.maps.places.PlacesService(mapCanvas);
    
    // ここで格納していたPosition情報を展開
    mapCanvas.fitBounds(bounds);

} // end initialize

google.maps.event.addDomListener(window, "load", initialize);

</script>

  <style type="text/css">
    html, body{
      margin: 0;
      padding: 0;
      width: 100%;
      height: 100%;
    }

    #map_canvas{
      position: fixed;
      width:100%;
      height:100%;
      top:0px;
      left:0;
    }

    #top-menu{
      padding:0;
      margin:0;
    }
	
  </style>

<% end %>

<script type="text/javascript">

	// 営業所テーブルを作成します。
//	init_jqgrid_shop();
	
	// 建物テーブルを作成します。
	init_jqgrid_building();


	// 営業所テーブルを作成
	function init_jqgrid_shop(){
		
		// 列名の定義
		var grid_name = ["id", "コード", "営業所名", "住所"];

		// 列属性の定義
		var grid_model = [
		  {name:"id", index:"id", width:70, align:"right", classes:"no_class", hidden:true}
		 ,{name:"no", index:"no", width:70, align:"center", classes:"no_class"}
		 ,{name:"shop_name", index:"shop_name", width:200, align:"left", classes:"no_class"}
		 ,{name:"shop_address", index:"shop_address", width:200, align:"left", classes:"no_class"}
		 // ここに「rbtnFmatter」のように関数を書くと、初期表示のロード時に毎回定義した関数がコールされると思われる。
	   	//,{name:"shop_address",index:"building_address",width:200,align:"center",classes:"name_class", 'label':'URL', 'formatter':rbtnFmatter}
		];

	   // function rbtnFmatter(cellvalue, options, rowObject){
	   //	  //alert(options['shop_name']);
	   //	  // alert('bbbb');
	   //  }

		// データの作成
	
		var grid_data = [];
		for(i in gon.shops){
			var rec = {};
			rec['id'] = gon.shops[i].id;
			rec['no'] = gon.shops[i].code;
			rec['shop_name'] = gon.shops[i].name;
			rec['shop_address'] = gon.shops[i].address;
		
			grid_data.push(rec);
		};
		
		jqgrid_opt = {
			 table_name:'shop_table'
			,fotter_name:'shop_pager'
			,div_name:'div_dummy'
			,caption:'営業所一覧'
			,event_type:1
			,shrinkFit:true
			,multiselect:false
		};				
	
		$(function(){
			jqgrid_create(grid_name, grid_model, grid_data, jqgrid_opt);
		});
	}
	
	// 建物テーブルを作成
	function init_jqgrid_building(){
		// 列名の定義
		var grid_name = ["id", "コード", "建物名", "住所", "建物種別"];

		// 列属性の定義
		var grid_model = [
		  {name:"id", index:"id", width:70, align:"right", classes:"no_class", hidden:true}
		 ,{name:"no", index:"no", width:70, align:"center", classes:"no_class"}
		 ,{name:"building_name", index:"building_name", width:200, align:"left", classes:"no_class"}
		 ,{name:"building_address", index:"building_address", width:200, align:"left", classes:"no_class"}
		 ,{name:"building_type", index:"building_type", width:200, align:"left", classes:"no_class"}
		];
		

		// データの作成
		var grid_data = [];
			
		gon.buildings.forEach(function(building){
			var rec = {};
			rec['id'] = building.id;
			rec['no'] = building.building_cd;
			rec['building_name'] = building.real_building_name;
			rec['building_address'] = building.address;
			rec['building_type'] = building.building_type;
		
			grid_data.push(rec);
		});
		
		jqgrid_opt = {
			 table_name:'building_table'
			,fotter_name:'building_pager'
			,div_name:'div_dummy'
			,caption:'建物一覧'
			,event_type:2
			,shrinkFit:true
			,multiselect:false
		};		
	
		$(function(){
			jqgrid_create(grid_name, grid_model, grid_data, jqgrid_opt);
			
			
			// 反映ボタン押下
			jQuery("#building_table").navGrid('#building_pager',{
			        edit:false,add:false,del:false,search:false
			      }).navButtonAdd('#building_pager',{
			        caption:"反映", position:"last", onClickButton: function(){
						 
						// 建物を表示
						 for(var item in build_arr){
						    build_arr[item].set("visible", false);
						 };
						 
						 var table_div = $('#building_table');
						 var row_data = table_div.getRowData();
						 for(var j in  row_data){
							 var obj_id = row_data[j].id;
							 build_arr[obj_id].set("visible", true);
						 }
						 
						 
					 }
			      });			
			
		});
	}

</script>


	<div id="panowide" style="width: 70%; height: 0px;margin-top: 5px;"></div>
	<a id="simple-menu" href="#sidr"></a>
	<div id="map_canvas" style="width: 70%;height:100%;float:right;"></div>
	<div id="div_dummy" style="float:left;width:30%;height:90%;padding-right:2px;">
	
		<table id="building_table"></table>
		<div id="building_pager"></div>
		
	
		<table id="shop_table"></table>
		<div id="shop_pager"></div>
	
	</div>

